{"ast":null,"code":"var _jsxFileName = \"/home/admin/Documentos/Projetos/ReactLaravel/app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker'; //Router\n\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom'; //Componentes\n\nimport Menu from './core/menu/Menu';\nimport App from './App';\nimport Login from './pages/login/index';\nimport Cargo from './pages/cargo/index';\nimport NotFound from './core/not-found/index'; // //Acl\n// import { isAuthenticated } from \"./services/auth\";\n// export const PrivateRoute = ({component: Component, ...rest}) => (\n//     <Route\n//     {...rest}\n//     render={props =>\n//       isAuthenticated() ? (\n//         <Component {...props} />\n//       ) : (\n//         <Redirect to={{ pathname: \"/login\", state: {Login} }} />\n//       )\n//     }\n//   />\n// );\n\nReactDOM.render(React.createElement(BrowserRouter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, React.createElement(Menu, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}), \",\", React.createElement(Switch, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}, React.createElement(Route, {\n  path: \"/\",\n  exact: true,\n  component: App,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/login\",\n  exact: true,\n  component: Login,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"*\",\n  component: NotFound,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}))), document.getElementById('root'));\nserviceWorker.unregister();","map":{"version":3,"sources":["/home/admin/Documentos/Projetos/ReactLaravel/app/src/index.js"],"names":["React","ReactDOM","serviceWorker","BrowserRouter","Switch","Route","Redirect","Menu","App","Login","Cargo","NotFound","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B,C,CAEA;;AACA,SAAQC,aAAR,EAAuBC,MAAvB,EAA+BC,KAA/B,EAAsCC,QAAtC,QAAuD,kBAAvD,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AAEA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGAV,QAAQ,CAACW,MAAT,CACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,OAEI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,GAAZ;AAAgB,EAAA,KAAK,EAAE,IAAvB;AAA6B,EAAA,SAAS,EAAEJ,GAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEI,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,QAAZ;AAAqB,EAAA,KAAK,EAAE,IAA5B;AAAkC,EAAA,SAAS,EAAEC,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFJ,EAII,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,GAAZ;AAAgB,EAAA,SAAS,EAAEE,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJJ,CAFJ,CADJ,EAUKE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAVL;AAYAZ,aAAa,CAACa,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\n//Router\nimport {BrowserRouter, Switch, Route, Redirect  } from 'react-router-dom';\n\n//Componentes\nimport Menu from './core/menu/Menu';\n\nimport App from './App';\nimport Login from './pages/login/index';\nimport Cargo from './pages/cargo/index';\nimport NotFound from './core/not-found/index';\n\n// //Acl\n// import { isAuthenticated } from \"./services/auth\";\n\n// export const PrivateRoute = ({component: Component, ...rest}) => (\n//     <Route\n//     {...rest}\n//     render={props =>\n//       isAuthenticated() ? (\n//         <Component {...props} />\n//       ) : (\n//         <Redirect to={{ pathname: \"/login\", state: {Login} }} />\n//       )\n//     }\n//   />\n// );\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <Menu />,\n        <Switch>\n            <Route path=\"/\" exact={true} component={App} />\n            <Route path=\"/login\" exact={true} component={Login} />\n            {/* <PrivateRoute path=\"/cargo\" component={Cargo} /> */}\n            <Route path='*' component={NotFound} />\n        </Switch>\n    </BrowserRouter>\n    ,document.getElementById('root'));\n\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}